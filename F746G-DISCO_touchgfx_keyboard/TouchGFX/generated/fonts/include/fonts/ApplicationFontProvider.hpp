/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#ifndef APPLICATIONFONTPROVIDER_HPP
#define APPLICATIONFONTPROVIDER_HPP

#include <touchgfx/FontManager.hpp>

namespace touchgfx
{
    class FlashDataReader;
}

struct Typography
{
    static const touchgfx::FontId DISPLAY = 0;
    static const touchgfx::FontId KEYBOARD = 1;
    static const touchgfx::FontId MODE = 2;
};

struct TypographyFontIndex
{
    static const touchgfx::FontId DISPLAY = 0;  // RobotoCondensed_Regular_28_4bpp
    static const touchgfx::FontId KEYBOARD = 1; // RobotoCondensed_Regular_20_4bpp
    static const touchgfx::FontId MODE = 2;     // RobotoCondensed_Regular_24_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
{
public:
    virtual touchgfx::Font* getFont(touchgfx::FontId typography);

    static void setFlashReader(touchgfx::FlashDataReader* /* flashReader */) { }
    static touchgfx::FlashDataReader* getFlashReader() { return 0; }
};

#endif // APPLICATIONFONTPROVIDER_HPP
